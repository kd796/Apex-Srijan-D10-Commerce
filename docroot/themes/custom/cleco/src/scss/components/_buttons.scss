/**
 * Base
 */
.button {
  @include button-reset;
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: 0 1.5rem;
  font-size: 0.875rem;
  font-weight: bold;
  font-stretch: condensed;
  text-align: left;
  text-transform: uppercase;
  letter-spacing: 0.06em;
  color: rgba($color-off-black, 0.8);
  border-radius: 1px;
  white-space: nowrap;
  transition: 200ms ease-out;
  border: 1px solid transparent;
  height: $input-height;

  &[disabled] {
    cursor: not-allowed;
    opacity: 0.5;
  }

  &:not([disabled]) {
    &:hover,
    &:focus {
      color: $color-off-black;
      outline: none;
      box-shadow: none;
    }
  }
}

/**
 * Arrow Icon
 */
.button:not(.button--simple) {
  &:not(.button--small) {
    min-width: 16rem;
  }

  &::before,
  &::after {
    flex: 0 1 auto;
    transition: inherit;
  }

  &::before {
    content: "";
    height: 2px;
    min-width: 0;
    width: 0;
    max-width: 1em;
    transform: translateX(-0.5em);
  }

  &::after {
    content: "";
    background: url(svg-background($svg-arrow-right, #fff)) no-repeat right center;
    min-width: 1em;
    width: 2em;
    height: 1.5em;
    margin-left: auto;
    transform: translateX(0.5em);
  }

  &:hover {
    &::before {
      background: #fff;
      width: 1em;
    }

    &::after {
      width: 1em;
    }
  }
}

/**
 * Color Variants
 */
@mixin button-color($bg, $text, $arrow: $text, $border: $bg) {
  color: $text;
  background-color: $bg;
  border-color: $border;

  &::before {
    background-color: $arrow;
  }

  &::after {
    background-image: url(svg-background($svg-arrow-right, $arrow));
  }
}

.button--primary {
  &:not(.button--outline) {
    @include button-color($color-orange, #fff);
  }

  &.button--outline {
    @include button-color(transparent, $color-orange, $color-orange, rgba($color-orange, 0.5));
  }

  &:not([disabled]) {
    &:hover,
    &:focus {
      &:not(.button--outline) {
        @include button-color($color-off-black, #fff);
      }

      &.button--primary-inverse {
        @include button-color(#fff, $color-off-black);
      }

      &.button--outline {
        @include button-color(rgba($color-orange, 0.1), $color-orange, $color-orange, $color-orange);
      }
    }
  }
}

.button--secondary {
  &:not(.button--outline) {
    @include button-color($color-off-black, #fff, $color-orange);
  }

  &.button--outline {
    @include button-color(transparent, $color-off-black, $color-orange, rgba($color-gray-light, 0.75));
  }

  &:not([disabled]) {
    &:hover,
    &:focus {
      &:not(.button--outline) {
        @include button-color($color-off-black, #fff, $color-orange);
      }

      &.button--outline {
        @include button-color(rgba($color-off-black, 0.1), $color-off-black, $color-orange, $color-off-black);
      }
    }
  }
}

.button--inverse {
  &:not(.button--outline) {
    @include button-color(#fff, $color-off-black, $color-orange);
  }

  &.button--outline {
    @include button-color(transparent, #fff, $color-orange, rgba(#fff, 0.75));
  }

  &:not([disabled]) {
    &:hover,
    &:focus {
      &:not(.button--outline) {
        @include button-color($color-orange, #fff, #fff);
      }

      &.button--outline {
        @include button-color(rgba(#fff, 0.2), #fff, $color-orange, #fff);
      }
    }
  }
}

/**
 * Small Variant
 */
.button--small {
  padding-left: 1.25em;
  padding-right: 1.25em;
  font-size: 0.8125rem;
  min-width: 0;
  height: $input-height-small;
}

/**
 * LIST
 */
.buttons {
  .button {
    margin-bottom: 0.375em;
  }
}
