<?php

/**
 * @file
 * Primary module hooks for Gearwrench Migrations module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\Component\Utility\UrlHelper;
use Drupal\Core\File\FileSystemInterface;
use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;
use Drupal\migrate\MigrateSkipRowException;
use Drupal\migrate\Plugin\MigrateSourceInterface;
use Drupal\migrate\Plugin\MigrationInterface;
use Drupal\migrate\Row;
use Drupal\node\NodeInterface;
use GuzzleHttp\Exception\RequestException;

/**
 * Implements hook_migrate_prepare_row().
 */
function gearwrench_migrations_migrate_prepare_row(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {
  if ($migration->id() === 'gearwrench_products') {
    if ($row->getSource()['remote_set'] === 'SKU-Set') {
      throw new MigrateSkipRowException('', TRUE);
    }
  }
  if ($migration->id() === 'gearwrench_product_sets') {
    if ($row->getSource()['remote_set'] !== 'SKU-Set') {
      throw new MigrateSkipRowException('', TRUE);
    }
  }
  if ($migration->id() === 'gearwrench_product_media') {
//    if ($row->getSource()['remote_set'] !== 'SKU-Set') {
//      throw new MigrateSkipRowException('', TRUE);
//    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gearwrench_migrations_preprocess_html(&$variables) {
//  $all_tids = \Drupal::entityQuery('taxonomy_term')
//    ->execute();
//  $pc_tids = \Drupal::entityQuery('taxonomy_term')
//    ->condition('vid', 'product_classifications')
//    ->execute();
//  $tids_to_remove = array_diff($all_tids, $pc_tids);
//  $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
//  $terms = $term_storage->loadMultiple($tids_to_remove);
//  $term_storage->delete($terms);
//  $vids =  Drupal\taxonomy\Entity\Vocabulary::loadMultiple();
//  $vocab_handler = \Drupal::entityTypeManager()->getStorage('taxonomy_vocabulary');
//  foreach ($vids as $vid) {
//    if ($vid->id() != 'product_classifications' && $vid->id() != 'tags') {
//      $vocab = $vocab_handler->loadMultiple([$vid->id()]);
//      $vocab_handler->delete($vocab);
//    }
//  }
//
//  $result = \Drupal::entityQuery('taxonomy_term')->condition('vid', 'sku', 'CONTAINS')->execute();
//  $storage_handler = \Drupal::entityTypeManager()
//    ->getStorage('taxonomy_term');
//  $entities = $storage_handler
//    ->loadMultiple($result);
//  $storage_handler
//    ->delete($entities);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gearwrench_migrations_preprocess_node(&$variables) {
  $entity = $variables['node'];
//  if ($entity && $entity instanceof NodeInterface) {
//    if ($entity->bundle() === 'product') {
//      if (!empty($entity->get('field_media')->target_id)) {
//        // Get fid from field_media
//        $mid = $entity->get('field_media')->target_id;
//        $media = Media::load($mid);
//        $fid = $media->field_media_image->target_id;
//
//        $media_storage_handler = \Drupal::entityTypeManager()
//          ->getStorage('media');
//        $media_item = $media_storage_handler->load($mid);
////        $media_storage_handler->delete([$media_item]);
//
//        $file_storage_handler = \Drupal::entityTypeManager()
//          ->getStorage('file');
//        $file = $file_storage_handler->load($fid);
//        $usage = \Drupal::service('file.usage')->listUsage($file);
//        if (count($usage) > 0 && !empty($usage['file']['media'])) {
//          $mid_to_use = array_key_first($usage['file']['media']);
//        }
//
////        $file_storage_handler->delete([$file]);
//
////        dpm($media);
//        dpm(array_key_first($usage['file']['media']));
//      }
//    }
//  }
  // Delete imported media and files.
//  if ($entity && $entity instanceof NodeInterface) {
//    if ($entity->bundle() === 'product') {
//      if (!empty($entity->get('field_product_images'))) {
//        foreach ($entity->get('field_product_images') as $image) {
//          $mid = $image->target_id;
//          $media = Media::load($mid);
//          $fid = $media->field_media_image->target_id;
//          if ($mid) {
//            $media_storage_handler = \Drupal::entityTypeManager()->getStorage('media');
//            $media_item = $media_storage_handler->load($mid);
//            if ($media_item) {
//              $media_storage_handler->delete([$media_item]);
//            }
//          }
//          if ($fid) {
//            $file_storage_handler = \Drupal::entityTypeManager()->getStorage('file');
//            $file = $file_storage_handler->load($fid);
//            if ($file) {
//              $file_storage_handler->delete([$file]);
//            }
//          }
//        }
//      }
//    }
//  }



}
