<?php
/**
 * Source
 * https://www.liip.ch/en/blog/drupal-8-multilanguage-improvements
 */
use Drupal\Core\Menu\MenuLinkInterface;
use Drupal\menu_link_content\Plugin\Menu\MenuLinkContent;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Database\Query\AlterableInterface;

// Add Langauge to Menu Autocomplete Results
// =========================================================================

/**
 * Implements hook_preprocess_menu().
 */
function atg_translation_preprocess_menu(&$variables)
{
    $menus = ['main', 'footer', 'footer-utils', 'header-utils'];

    if (in_array($variables['menu_name'], $menus)) {
        $language = Drupal::languageManager()
            ->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)
            ->getId();
        foreach ($variables['items'] as $key => $item) {
            if (!$variables['items'][$key] = atg_translation_checkForMenuItemTranslation($item, $language)) {
                unset($variables['items'][$key]);
            }
        }
    }
}

// Hide menu links for untranslated languages.
// =========================================================================

/**
 * @param $item
 * @param $language
 * @return mixed
 */
function atg_translation_checkForMenuItemTranslation($item, $language)
{
    $menuLinkEntity = atg_translation_load_link_entity_by_link($item['original_link']);

    if ($menuLinkEntity != null) {
        $languages = $menuLinkEntity->getTranslationLanguages();

        // Remove links which are not translated to the current language.
        if (!array_key_exists($language, $languages)) {
            return false;
        } else {
            if (count($item['below']) > 0) {
                foreach ($item['below'] as $subkey => $subitem) {
                    if (!$item['below'][$subkey] = atg_translation_checkForMenuItemTranslation($subitem, $language)) {
                        unset($item['below'][$subkey]);
                    }
                }
            }
            return $item;
        }
    }
}

/**
 * @param MenuLinkInterface $menuLinkContentPlugin
 * @return mixed
 */
function atg_translation_load_link_entity_by_link(MenuLinkInterface $menuLinkContentPlugin)
{
    $entity = null;
    if ($menuLinkContentPlugin instanceof MenuLinkContent) {
        $menu_link = explode(':', $menuLinkContentPlugin->getPluginId(), 2);
        $uuid      = $menu_link[1];
        $entity    = \Drupal::service('entity.repository')
            ->loadEntityByUuid('menu_link_content', $uuid);
    }
    return $entity;
}

// Hide language switcher links for untranslated languages on an entity.
// =========================================================================

/**
 * Implements hook_language_switch_links_alter().
 *
 * Drupal's Core Translate Feature
 */
// function atg_translation_language_switch_links_alter(array &$links, $type, $path)
// {
//     if ($entity = atg_translation_get_page_entity()) {
//         $new_links = [];
//         foreach ($links as $lang_code => $link) {
//             try {
//                 if ($entity->getTranslation($lang_code)->access('view')) {
//                     $new_links[$lang_code] = $link;
//                 }
//             } catch (\InvalidArgumentException $e) {
//                 // This language is untranslated so do not add it to the links.
//                 //$link['attributes']['class'][] = 'not-translated';
//                 $link['attributes']['style'][] = 'display: none;';
//                 $new_links[$lang_code]         = $link;
//             }
//         }
//         $links = $new_links;
//     }
// }

/**
 * Retrieve the current page entity.
 *
 * @return Drupal\Core\Entity\ContentEntityInterface
 *   The retrieved entity, or FALSE if none found.
 */
function atg_translation_get_page_entity()
{
    $params = \Drupal::routeMatch()->getParameters()->all();
    $entity = reset($params);
    if ($entity instanceof ContentEntityInterface) {
        return $entity;
    }
    return false;
}

// Hide untranslated terms
// =========================================================================

/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function atg_translation_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
    $langCode = \Drupal::languageManager()->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)->getId();

    if ($form_id == 'taxonomy_overview_terms') {
        foreach ($form['terms'] as $key => $term) {
            if (is_array($term) && isset($term['#term'])) {
                if ($langCode !== $term['#term']->get('langcode')->value) {
                    $form['terms'][$key]['#access']              = false;
                    $form['terms'][$key]['#attributes']['style'] = 'display: none;';
                }
            }
        }
    }
}
